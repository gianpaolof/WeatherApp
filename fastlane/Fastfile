# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

    # private_lanes
    desc "Clean"
    private_lane :clean do
        gradle(task: "clean")
    end

    desc "Download dependencies"
    private_lane :download_dependencies do
    gradle(task: "androidDependencies")
    end

    # public_lanes
    desc "Unit tests"
    lane :tests do
      gradle(task: "test")
    end

    desc "Generate build and upload to firebase"
    lane :build do
    clean
    download_dependencies
    slack_send(':crossed_fingers: Generating '+ENV['BUILD_TYPE']+' build', ENV['CHANNEL'])
    gradle(
        task: "assemble",
        build_type: ENV["BUILD_TYPE"],
    )
    slack_send(ENV['BUILD_TYPE']+' Build Successfully completed...:star-struck: \n Uploading to Firebase', ENV['CHANNEL'])
    firebase_app_distribution(
        app: ENV["FIREBASE_APP_ID"],
        release_notes_file: "releaseNotes.txt",
        groups: "Internal",
        firebase_cli_token: ENV["FIREBASE_CI_TOKEN"],
        debug: false
    )
    slack_send(':tada: Hooooooorrrayyyyy!!! '+ENV['BUILD_TYPE']+' Build is successfully uploaded on Firebase  Distribution!! :dancer::man_dancing:', ENV['CHANNEL'])
    end
end

def slack_send(msg, channel)
    slack(
      message: msg,
      success: true,
      channel: "weather_app_release",
      default_payloads: []
    )
end